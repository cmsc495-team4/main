<?php

// Function: getDropDown()
// Parameters required: $fieldName and $tableName
//
// This function is to be inserted between the <select> tags of an HTML dropdown dialog
// Call this function with the arguments $fieldName (name of DB field for which you want a value)
// and $tableName (name of DB table containing field)
//
// results of calling: getDropDown("generation_name", "generations") will be returned similar to:
// <option value="gen1">gen1</option>
// <option value="gen2">gen2</option>
// <option value="gen3">gen3</option>
// --where, for example "gen1" is the value contained in the "generation_name" field of the table "generations"
//
// Your HTML dropdown code will look similar to this:
// <select name="choose_generation">
// getDropDown("generation_name", "generations"); <--wrapped in php tags
// </select>
function getDropDown($fieldName, $tableName, $previousValue)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $returndata = array();
    $returnArray = null;
    $extra = "";

    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $query = "SELECT DISTINCT " . $fieldName . " FROM " . $tableName . " ORDER BY " . $fieldName . " ASC";
    //echo "\n--> " . $query . "\n";
    $result = $pdo->query($query);
    $result->setFetchMode(PDO::FETCH_ASSOC);

    $i = 0;
    $j = 0;
    $alreadyFound = array();

    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        if (! empty($row)) {

            $returnArray[$i] = $row;
            $i ++;
            $skipRest = "false";
        } else {
            echo "<option value=\"none\">No records avail</option>\n";
            $skipRest = "true";
        }
    }

    if ($skipRest != "true") {

        if (! empty($previousValue)) {
            echo "<option name=\"" . $fieldName . "\"value=\"\" >- select -</option>\n";
        } else {
            echo "<!-- *** dropdown box \"<option>\" values are auto-generated by code -->\n";
            echo "<option name=\"" . $fieldName . "\"value=\"\" selected>- select -</option>\n";
        }
        foreach ($returnArray as $row) {
            foreach ($row as $key => $val) {
                if ($val == $previousValue) {
                    $extra = "selected";
                }
                if (! in_array($val, $alreadyFound) && ($val != "")) { // don't add duplicate or blank values to the list
                    if ($key == $fieldName) {
                        echo "<option name=\"" . $fieldName . "\" value=\"" . htmlspecialchars($val) . "\" " . $extra . ">" . htmlspecialchars($val) . "</option>\n";
                    } else {
                        echo "<option value=\"none\">No records avail</option>\n";
                    }
                }
                $alreadyFound[$j] = $val;
                $j ++;
                $extra = "";
            }
        }
        // echo "<option value=\"0000\" selected>- select -</option>\n";
    }

    $pdo = null;
}

function getInvestigators($last_pi_name)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $returndata = array();
    $returnArray = null;

    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $query = "SELECT DISTINCT * FROM user WHERE user_role='Investigator' ORDER BY last_name ASC";
    $result = $pdo->query($query);
    // var_dump($query);
    $result->setFetchMode(PDO::FETCH_ASSOC);

    $i = 0;

    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        if (! empty($row)) {

            $returnArray[$i] = $row;
            $i ++;
            $skipRest = "false";
        } else {
            echo "<option value=\"pi_name\" selected>No Investigators</option>\n";
            $skipRest = "true";
        }
    }

    if ($skipRest != "true") {
        if (! empty($last_pi_name)) {
            echo "<option name=\"pi_name\" value=\"\">- select -</option>\n";
        } else {
            echo "<!-- *** dropdown box \"<option>\" values are auto-generated by code -->\n";
            echo "<option name=\"pi_name\" value=\"\" selected>- select -</option>\n";
        }

        foreach ($returnArray as $row) {
            // foreach ($row as $key=>$val) {
            $name = $row['last_name'] . ", " . $row['first_name'];
            $username = $row['username'];
            if ($username == $last_pi_name) {
                echo "<option name=\"pi_name\" value=\"" . htmlspecialchars($username) . "\" selected>" . htmlspecialchars($name) . "</option>\n";
            } else {
                echo "<option name=\"pi_name\" value=\"" . htmlspecialchars($username) . "\">" . htmlspecialchars($name) . "</option>\n";
            }
        }
    }

    $pdo = null;
}

function newLitterIncrement(){
  ini_set('display_errors', 1);
  ini_set('display_startup_errors', 1);
  error_reporting(E_ALL);

  try {
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

    $sql = 'SELECT MAX(litterID) FROM litters';
    $q = $pdo->query($sql);
    $q->setFetchMode(PDO::FETCH_ASSOC);
    $temp = $q->fetch();
    $newLitterID = $temp['MAX(litterID)'] + 1;

  } catch (PDOException $e) {
    echo $e->getMessage();
  }
  $pdo = null;
  return $newLitterID;
}

function checkLitterExists($litterID)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
    $litterExists = TRUE;

    try {
        $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
        $query = "SELECT id FROM litters WHERE litterID = " . $litterID;
        $result = $pdo->query($query);
        $result->fetch(PDO::FETCH_ASSOC);

        if (! $result) {
            $litterExists = FALSE;
        }
        return $litterExists;
    } catch (PDOException $e) {
        $returnArray = array(
            "Error accessing database"
        );
    }

    $pdo = null;
}

function addPups($litterID)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);
try {
    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
		
	$issues = false;
	//check that all required fields provided.
	if(empty($_POST['numPups']) || empty($_POST['birth_date'])){
		$issues = true;
		echo '<label style="color:red">Unable to add litter. DOB and/or Number of Pups required.';
	}
	//check that litterID selected if newLitter not checked
	if(!isset($_POST['newLitter']) && empty($_POST['litterID'])){
		$issues = true;
		echo '<label style="color:red">Unable to add litter. Must select either New Litter or existing litter </label>';
	}
	
	//If adding to existing litter, get breeding pair. New litter requires selected pair ID
	$pairNum = "";
	if(isset($_POST['newLitter'])){
		if(empty($_POST['pairID'])) {
			$issues = true;
			echo '<label style="color:red">Unable to add litter. Breeding Pair required for New Litter </label>';
		} else {
			$pairNum = $_POST['pairID'];
		}
	} else {
		$sql0 = "SELECT breedingPair FROM litters WHERE litterID = ?";
		$stmnt = $pdo->prepare($sql0);
		$stmnt->execute([$litterID]);
		$row = $stmnt->fetch(PDO::FETCH_ASSOC);
		$pairNum = $row['breedingPair'];			
	}
	
	//continue if all required fields provided.
	if(!$issues){
		$numberPups = $_POST['numPups'];
		$dateOfBirth = $_POST['birth_date'];
		$comments = $_POST['commentBox'];		
	
		//get pups' strain and generation. Male parent used to get other data
        $sql1 = 'SELECT maleID, desiredStrain, offspringGen FROM breeding_pairs WHERE pairID = ?';
        $stmnt = $pdo->prepare($sql1);
        $stmnt->execute([$pairNum]);
        $row = $stmnt->fetch(PDO::FETCH_ASSOC);
		
		$maleID = $row['maleID'];
		$strain_name = $row['desiredStrain'];
		$strainID = getStrainIdByName($strain_name);
		$generation = $row['offspringGen'];
        
		//get new pups species and litter from the male breeder
		$sql2 = 'SELECT species_name,PI_username FROM filtered_return WHERE animalID = ?';
		$stmnt = $pdo->prepare($sql2);
		$stmnt->execute([$maleID]);
		$row = $stmnt->fetch(PDO::FETCH_ASSOC);
			
		$species = $row['species_name'];
		$pi = $row['PI_username'];
				
		$sql3 = "INSERT INTO `animals` (`species_name`, `classification`, `sex`, `tag_date`, `birth_date`, `wean_date`, `genotype`, `generation`, `location`, `tagNumber`, `deceased`, `transferred`, `comments`, `strain_ID`)
			VALUES ('$species', 'pup', NULL, NULL, '$dateOfBirth', NULL, NULL, '$generation', 'B1C110', NULL, b'0', b'0', '$comments', '$strainID')";
		
        for ($i=0; $i < $numberPups ; $i++) {
          	$pdo->exec($sql3);
		//get inserted animal's id
		$animalID = $pdo->lastInsertID();
		  
		$sql4 = "INSERT INTO litters (`litterID`, `animalID_pup`, `breedingPair`) VALUES ('$litterID', '$animalID', '$pairNum')";
		$sql5 = "INSERT INTO `PI_assigned_animals` (`PI_username`, `PI_strain_ID`, `PI_animalID`)
			VALUES ('$pi', '$strainID', '$animalID')";
          	$pdo->exec($sql4);
		$pdo->exec($sql5);
       }
       echo "Success - " . htmlspecialchars($numberPups) . " new pups added to the database!";
	}
    }catch (PDOException $e) {
        echo $e->getMessage();
    }

        $pdo = null;
} 

function deleteAnimal($id){
  ini_set('display_errors', 1);
  ini_set('display_startup_errors', 1);
  error_reporting(E_ALL);
  try {
      $options = [
          PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
          PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
          PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
      ];
      require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

          $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);

          $sql = 'DELETE FROM animals WHERE animalID = ?';
          $stmnt = $pdo->prepare($sql);
          $stmnt->execute([$id]);

        }catch (PDOException $e) {
          echo $e->getMessage();
        }
        $pdo = null;
}

/*Adds a new animal to the database
$vals assoc names: species, classification, sex, tagDate, birthDate, weanDate, genotype, litter, location, strain_ID, tagNum, deceased, transfer, notes*/
function addNewAnimal($vals){
	ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);


    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	
	//check that tag number not duplicate
	$queryTag = $pdo->prepare("SELECT COUNT(*) AS count FROM animals WHERE tagNumber = ?");
	$result = $queryTag->execute([$vals['tagNum']]);
	$tag = $queryTag->fetch();
	if($tag['count'] > 0){
		echo '<label style="color:red">Unable to add animal. Duplicate tag number: ' . $vals['tagNum'] . '</label>';
	}
	else{
	
	//add to database		
		$query = $pdo->prepare("CALL addNewAnimal(:pi, :species, :class, :sex, :tagDate, :dob, :wean, :geno, :litter, :loc, :strain, :tagNum, :dec, :tran, :notes)");
		$return = $query->execute([$vals['pi'], $vals['species'], $vals['classification'], $vals['sex'], $vals['tagDate'], $vals['birthDate'], $vals['weanDate'], $vals['genotype'],
			$vals['litter'], $vals['location'], $vals['strain_ID'], $vals['tagNum'], $vals['deceased'], $vals['transfer'], $vals['notes']]);
		
		if($return){
			echo '<label style="color:green">Animal added successfully.</label>';
		}
		else{
			echo '<label style="color:red">Addition Failed!!!</label>';
		}
	}
	$pdo = null;
}

/*
 Updates animal with posted values (or current if none posted) except when 1) Entered Tag# exists or 2) change of sex, species, or class would
 invalidate an existing breeding pair. 
 If litter ID is changed, will also update animal's generation.
 If PI or Strain changed, will also update PI_assigned_animals table 
*/
function updateAnimal(){
		
				
	ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

	$issues = false; //sets to true if any issues found with the update

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	
	//get animal's current field values
	$queryCur = $pdo->prepare("SELECT * FROM filtered_return WHERE animalID = ? LIMIT 1");
	$queryCur->execute([$_POST['change_id']]);
	$cur = $queryCur->fetch();
	//var_dump($cur); change_tag
	$animalID = $cur['animalID'];
	
	//if POST['xx'] value empty, set value to current value, else use POST. Notes are appended	
	$class = (!isset($_POST['classification']) ? $cur['classification'] : $_POST['classification']);
	$pi = (empty($_POST['pi_name']) ? $cur['PI_username'] : $_POST['pi_name']);
	$species = (empty($_POST['species_name']) ? $cur['species_name'] : $_POST['species_name']);
	$sex = (empty($_POST['sex']) ? $cur['sex'] : $_POST['sex']);
	$tagDate = (empty($_POST['tagDate']) ? $cur['tag_date'] : $_POST['tagDate']);
	$dob = (empty($_POST['dob']) ? $cur['birth_date'] : $_POST['dob']);
	$weanDate = (empty($_POST['weanDate']) ? $cur['wean_date'] : $_POST['weanDate']);
	$genotype = (empty($_POST['genotype']) ? $cur['genotype'] : $_POST['genotype']);
	$litter = (empty($_POST['litter']) ? $cur['litterID'] : $_POST['litter']);
	$location = (empty($_POST['location']) ? $cur['location'] : $_POST['location']);
	$strainID = (empty($_POST['strain_name']) ? $cur['id_strain'] : getStrainIdByName($_POST['strain_name']));
	$tagNum = (empty($_POST['tagNum']) ? $cur['tagNumber'] : $_POST['tagNum']);
	//if deceased/transfer not set, then leave as current, else if set then value is true. Convert current from int to boolean first
	$cur_dec = ($cur['deceased'] ? true : false);
	$deceased = ((!isset($_POST['deceased'])) ? $cur_dec : true);
	$cur_tran = ($cur['transferred'] ? true : false);
	$transfer = ((!isset($_POST['transfer'])) ? $cur_tran : true);
	//if new notes, append to current notes
	$notes = (empty($_POST['commentBox']) ? $cur['comments'] : ($cur['comments'] . "\n" . $_POST['commentBox']));	
	
	
	//if tag# changed check that tag number not duplicate
	if($tagNum != $cur['tagNumber']){
		$issues = true;
		$queryTag = $pdo->prepare("SELECT COUNT(*) AS count FROM animals WHERE tagNumber = ?");
		$queryTag->execute([$tagNum]);
		$tag = $queryTag->fetch();
		if($tag['count'] > 0){
			echo '<label style="color:red">Unable to add animal. Duplicate tag number: ' . $tagNum . '</label>';
		}
	}			
				
			
	//if changes to sex, species, or classification check that animal isn't part of existing breeding pair
	if($sex != $cur['sex'] || $species != $cur['species_name'] || ($class != $cur['classification'] && $class != 'breeder')){
		$queryBr = $pdo->prepare("SELECT COUNT(*) AS count FROM breeding_pairs WHERE maleID = ? OR femaleID = ?");
		$queryBr->execute([$animalID, $animalID]);
		$br = $queryBr->fetch();
		if($br['count'] > 0){
			$issues = true;
			echo '<label style="color:red">Unable to update. Animal is part of breeding pair which the updates would invalidate.</label>';
		}
		echo '<label style="color:red">Check breeder</label>';
	}
	
	//if pi updated, check that PI is authorized to use existing strain
	if( ($pi != $cur['PI_username']) ){	
		$queryStr = $pdo->prepare("SELECT COUNT(*) AS count FROM PI_authorized_strains WHERE authPI_username = ? AND authPI_strain_ID = ?");
		$queryStr->execute([$pi, $strainID]);
		$auth = $queryStr->fetch();
		if($auth['count'] < 1){
			$issues = true;
			echo "<label style='color:red'>Unable to update. Existing strain not authorized for new PI.</label>";
		}
	}
	
	//if no issues, update animal
	if(!$issues){
		//if litterID changed, get generation for update, and update 
		$gen = $cur['generation'];
		if($litter != $cur['litterID']){
			$queryGen = $pdo->prepare("SELECT offspringGen FROM litters, breeding_pairs WHERE litterID = ? AND breedingPair = pairID LIMIT 1");
			$queryGen->execute([$litter]);
			$result = $queryGen->fetch();
			$gen = $result['offspringGen'];
			//check if animal exists in litters table, if so update, else insert
			$queryL = $pdo->prepare("SELECT COUNT(*) AS count FROM litters WHERE animalID_pup = ?");
			$queryL->execute([$animalID]);
			$exists = $queryL->fetch();
			
			//get new litter's breeding pair
			$qGetPair = $pdo->prepare("SELECT breedingPair FROM litters WHERE litterID = ? LIMIT 1");
			$qGetPair->execute([$litter]);
			$pair = $qGetPair->fetch();
			if($exists['count'] > 0){
				$queryUL = $pdo->prepare("UPDATE litters SET litterID = ?, breedingPair = ? WHERE animalID_pup = ?");
				$queryUL->execute([$litter, $pair['breedingPair'], $animalID]);
			}
			else{
				 
				$queryIL = $pdo->prepare("INSERT INTO litters VALUES (NULL, ?, ?, ?)");
				$queryIL->execute([$litter, $animalID, $pair['breedingPair']]);
			}
		}
		
		
		$queryUpdateA = $pdo->prepare("UPDATE animals SET species_name = ?, classification = ?, sex = ?, entered_date = DEFAULT, tag_date = ?, birth_date = ?, wean_date = ?, genotype = ?, generation = ?, location = ?, strain_ID = ?, tagNumber = ?, deceased = ?, transferred = ?, comments = ? WHERE animalID = ?");
		$return = $queryUpdateA->execute([$species, $class, $sex, $tagDate, $dob, $weanDate, $genotype, $gen, $location, $strainID, $tagNum, $deceased, $transfer, $notes, $animalID]);
		if($return){
			echo '<label style="color:green">Update animals Successful!</label>';
		}
		else{
			echo "Update Failed!!!";
		}		
		
		//if PI and/or strain changed, update PI_assigned_animals table
		if($pi != $cur['PI_username'] || $strainID != $cur['id_strain']){
			$queryUpdateB = $pdo->prepare("UPDATE PI_assigned_animals SET PI_username=?, PI_strain_ID=? WHERE PI_animalID = ?");
			$return = $queryUpdateB->execute([$pi, $strainID, $animalID]);
			if($return){
				echo '<label style="color:green">Update pi_assigned_animals Successful!</label>';
			}
			else{
				echo "Update Failed!!!";
			}
		}
	} 
}

function getStrainIdByName($sName){
	$options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	$query = $pdo->prepare("SELECT id_strain FROM strains WHERE strain_name = ? LIMIT 1");
	$query->execute([$sName]);
	$result = $query->fetch();
	return $result['id_strain'];
}

function getIdByTag($tag){
	$options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	$query = $pdo->prepare("SELECT animalID FROM animals WHERE tagNumber = ? LIMIT 1");
	$query->execute([$tag]);
	$result = $query->fetch();
	return $result['animalID'];
}


function addBreedPair($strain, $date, $male, $female, $notes){
	ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	//prepare and call stored procedure
	$query = $pdo->prepare("CALL addBreedPair(?, ?, ?, ?, ?, @p_id)");
	//Bind all in parameters. OUT parameter does not need binding
	$query->bindParam(1, $male, PDO::PARAM_INT, 11);
	$query->bindParam(2, $female, PDO::PARAM_INT, 11);
	$query->bindParam(3, $strain, PDO::PARAM_STR, 45);
	$query->bindParam(4, $date, PDO::PARAM_STR, 11);
	$query->bindParam(5, $notes, PDO::PARAM_STR, 512);
	$return = $query->execute();
	
	if($return){
		//gets stored procedure's output
		$sprocOutput = $pdo->query("SELECT @p_id")->fetch();
		echo '<label style="color:green">Successfully added new breeding pair. New pair #: ' . htmlspecialchars($sprocOutput['@p_id']) . '</label>';
	}
	else{
		echo '<label style="color:red">Addition Failed!!!</label>';
	}
	
	$pdo = null;
}

/*
Update breeding_pairs table with updated values. Will not update if pair already has litters due to traits assigned to pups by
pair traits when created. If new male OR new female, check they are same species and same PI. If new male or female ID, then 
offspringGen may also be updated, depending on new breeder. 
*/
function updateBreedPair(){
	ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$issues = false;
	$getNewGen = false;
	$prNum = $_POST['prNum'];
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	
	//if pair already had litters, disallow update
	$queryLit = $pdo->prepare("SELECT COUNT(*) as count FROM litters WHERE breedingPair = ?");
	$queryLit->execute([$prNum]);
	$lits = $queryLit->fetch();
		if($lits['count'] > 0){
			$issues = true;
			echo '<label style="color:red">Unable to update. Breeding pair has already had litters. Must add new pair.</label>';
		}
	
	//get current values for pair
	$queryCur = $pdo->prepare("Select * FROM breeding_pairs WHERE pairID = ?");
	$queryCur->execute([$prNum]);
	$cur = $queryCur->fetch();
	
	//assign update values
	$strain = (empty($_POST['strain_name']) ? $cur['desiredStrain'] : $_POST['strain_name']);
	$date = (empty($_POST['setupDate']) ? $cur['pair_date'] : $_POST['setupDate']);
	$male = (empty($_POST['maleTag']) ? $cur['maleID'] : getIdByTag($_POST['maleTag']));
	$female = (empty($_POST['femaleTag']) ? $cur['femaleID'] : getIdByTag($_POST['femaleTag']));
	$notes = (empty($_POST['commentBox']) ? $cur['notes'] : $cur['notes'] . "\n" . $_POST['commentBox']);
	if($male != $cur['maleID'] || $female != $cur['femaleID']){
		$getNewGen = true;
	}
	
	//get male and female's (to update) assigned PI for future use
	$queryPS = $pdo->prepare("Select PI_username AS pi, species_name AS species FROM filtered_return WHERE animalID = ?");
	$queryPS->execute([$male]);
	$resM = $queryPS->fetch();
	$malePI = $resM['pi'];
	$maleSp = $resM['species'];
	
	$queryPS->execute([$female]);
	$resF = $queryPS->fetch();
	$femalePI = $resF['pi'];
	$femaleSp = $resF['species'];
	
	$strainID = getStrainIdByName($strain);
	//if attempt to update new strain OR 2 new breeders but not both, check strain is/would be authorized for breeders that are/will be in table
	if( ($strain != $cur['desiredStrain']) XOR (($male != $cur['maleID']) && ($female != $cur['femaleID'])) ){	
		$queryStr = $pdo->prepare("SELECT COUNT(*) AS count FROM PI_authorized_strains WHERE authPI_username = ? AND authPI_strain_ID = ?");
		$queryStr->execute([$malePI, $strainID]);
		$auth = $queryStr->fetch();
		if($auth['count'] < 1){
			$issues = true;
			echo "<label style='color:red'>Unable to update. Strain entered not authorized for pair's PI</label>";
		}
	}
	
	//if new male only or new female only, check that new pair would be same species and have same PI
	if($male != $cur['maleID'] XOR $female != $cur['femaleID']){
		if($maleSp != $femaleSp){
			$issues = true;
			echo "<label style='color:red'>Unable to update. New breeder is not same species as existing counterpart</label>";
		}
		else if($malePI != $femalePI){
			$issues = true;
			echo "<label style='color:red'>Unable to update. New breeder does not have same PI as existing counterpart</label>";			
		}
	}
	
	if(!$issues){
		$gen = $cur['offspringGen'];
		//generation is one more than the min of the breeder's generation
		if($getNewGen){
			$queryG = $pdo->prepare("SELECT generation FROM animals WHERE animalID = ?");
			$queryG->execute([$male]);
			$mGen = $queryG->fetch();
			$queryG->execute([$female]);
			$fGen = $queryG->fetch();
			$gen = ($mGen['generation'] > $fGen['generation'] ? $fGen['generation'] : $mGen['generation']) + 1;
		}
		$queryU = $pdo->prepare("UPDATE breeding_pairs SET maleID = ?, femaleID = ?, desiredStrain = ?, offspringGen = ?, pair_date = ?, notes = ? WHERE pairID = ?");
		$return = $queryU->execute([$male, $female, $strain, $gen, $date, $notes, $prNum]);
		if($return){
			echo "Successfully updated breeding pair.";
		}else {
			echo "Update Failed";
		}
	}

	$pdo = null;
}

function getAnimal($selectedUpdateValue)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);


    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);


        $query1 = "SELECT * FROM `filtered_return` WHERE animalID=" . $selectedUpdateValue;
		echo $selectUpdateValue . "\n";
        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);

        $tableRow = 0;

        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
            	var_dump($row);
                $animalID = $row["animalID"];
                $tagNumber = $row["tagNumber"];
                $sex = $row["sex"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $classification = $row["classification"];
                $genotype = $row["genotype"];
                $birth_date = $row["birth_date"];
                $wean_date = $row["wean_date"];
                $tag_date = $row["tag_date"];
                $deceased = $row["deceased"];
                $transferred = $row["transferred"];
                $comments = $row["comments"];
                
                if ($deceased == 1) {
                    $strDeceased = "Yes";
                } else {
                    $strDeceased = "No";
                }

                if ($transferred == 1) {
                    $strTransferred = "Yes";
                } else {
                    $strTransferred = "No";
                }

                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);

                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];

                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);

                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }

                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);

                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];
                
		}
	}
}

function displayWeanlingReportTable() {
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);
    $animalList = "";
    $litterFilter = "";
    $displayAll = TRUE;
	
	
    if (isset($_REQUEST["clear"])) {
        $_POST = array();
        $_REQUEST = array();
    }
	
    // echo "before\n";
    if (isset($_REQUEST["startDate"]) && isset($_REQUEST["endDate"])) {// retrieve the form data by using the element's name attributes value as key
		$displayAll = FALSE;
		
		$filterStartDate = $_REQUEST["startDate"];
		$filterEndDate = $_REQUEST["endDate"];
		
		if (empty($filterStartDate) && empty($filterEndDate)) { //check to make sure that both dates are not empty
			$displayAll = TRUE;
		} else {
			$animalList = "AND birth_date BETWEEN '" . $filterStartDate . "' AND '" . $filterEndDate . "'";
		}
	}
	
	
    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
    echo "<!-- *** NOTE *** This HTML table and contents are auto-generated by code -->\n";
    echo "<div id=\"animalTable\" class=\"maintable\">\n";
    echo "<form>\n";
    echo "<table id=\"maintable\" class=\"display compact\">\n";
    echo "<thead>";
    echo "<tr class=\"animalList\">
    		<th class=\"animals\">ID</th> <th class=\"animals\">Investigator</th> <th class=\"animals\">Species</th> <th class=\"animals\">Strain</th> 
			<th class=\"animals\">Litter<br>ID</th> <th class=\"animals\">Parent<br>Pair</th> <th class=\"animals\">Birth<br>Date</th>  
    	  </tr>\n";
    echo "</thead>
	<tbody>";
    if ($displayAll) {
        $query1 = "SELECT * FROM `filtered_return` WHERE classification='pup'";
        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);
        $tableRow = 0;
        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $birth_date = $row["birth_date"];
                $deceased = $row["deceased"];
                $transferred = $row["transferred"];
                $comments = $row["comments"];
                
                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);
                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];
                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);
                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }
                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);
                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];
                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "</tr>\n";
            }
        }
    } else {
        $query1 = "SELECT * FROM filtered_return WHERE classification='pup' " . $animalList;
        // echo var_dump($_POST);
        // echo var_dump($_REQUEST);
        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);
        $tableRow = 0;
        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $birth_date = $row["birth_date"];
                $parentPair = $row["breedingPair"];
                $litterID = $row["litterID"];
                $comments = $row["comments"];
				
                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);
                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];
                // echo "--> " . $filterPI . ": " . $responsible_PI . "\n\n";
                if ((! empty($filterPI)) && ($responsible_PI != $filterPI)) {
                    continue;
                }
                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);
                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }
                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);
                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];
                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "</tr>\n";
            }
        }
    }
    echo "</tbody></table>\n";
    echo "</form>\n";
    echo "</div>";
    $pdo = null;
}

function pupSurvivabilityReportTable() {
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);
    $animalList = "";
	
    if (isset($_REQUEST["clear"])) {
        $_POST = array();
        $_REQUEST = array();
    }
	
	
    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
    echo "<!-- *** NOTE *** This HTML table and contents are auto-generated by code -->\n";
    echo "<div id=\"animalTable\" class=\"maintable\">\n";
    echo "<form>\n";
    echo "<table id=\"maintable\" class=\"display compact\">\n";
    echo "<thead>";
    echo "<tr class=\"animalList\">
    		<th class=\"animals\">Investigator</th> <th class=\"animals\">Species</th> <th class=\"animals\">Strain</th> <th class=\"animals\">Parent<br>Pair</th> 
			<th class=\"animals\">Number<br>Of<br>Pups</th> <th class=\"animals\">Deceased<br>Pups</th> <th class=\"animals\">Percent<br>That<br>Survive</th>
    	  </tr>\n";
    echo "</thead>
	<tbody>";
        $query1 = "SELECT * FROM litters GROUP BY breedingPair";
        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);
        $tableRow = 0;
    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        if (! empty($row)) {
			$parentPair = $row["breedingPair"];
			$animalID_pup = $row["animalID_pup"];
			$litterID = $row["litterID"];
			$multipleStrainRef = $parentPair;
			if ($parentPair <> $multipleStrainRef) {
				$strain = "";
			}
              
            $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID_pup;
            $result2 = $pdo->query($query2);
            $result2->setFetchMode(PDO::FETCH_ASSOC);
            $row2 = $result2->fetch(PDO::FETCH_ASSOC);
            $responsible_PI = $row2["PI_username"];
            $strain_ID = $row2["PI_strain_ID"];
            if (! empty($responsible_PI)) {
                $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                $result3 = $pdo->query($query3);
                $result3->setFetchMode(PDO::FETCH_ASSOC);
                $row3 = $result3->fetch(PDO::FETCH_ASSOC);
                $firstName = $row3["first_name"];
                $lastName = $row3["last_name"] . ", ";
            } else {
                $lastName = "Unassigned";
                $firstName = "";
            }
			
			$query3 = "SELECT desiredStrain FROM breeding_pairs WHERE pairID=" . $parentPair;
            $result3 = $pdo->query($query3);
            $result3->setFetchMode(PDO::FETCH_ASSOC);
            $row3 = $result3->fetch(PDO::FETCH_ASSOC);
			//$strainIDnum = $row3["desiredStrain"];
		$strain = $row3["desiredStrain"];
			
			//$query4 = "SELECT strain_name FROM strains WHERE id_strain=" . $strainIDnum;
            //$result4 = $pdo->query($query4);
            //$result4->setFetchMode(PDO::FETCH_ASSOC);
            //$row4 = $result4->fetch(PDO::FETCH_ASSOC);
			//$strain = $row4["strain_name"];
			
            $query5 = "SELECT species_name FROM filtered_return WHERE animalID=" . $animalID_pup;
            $result5 = $pdo->query($query5);
            $result5->setFetchMode(PDO::FETCH_ASSOC);
            $row5 = $result5->fetch(PDO::FETCH_ASSOC);			
			$species = $row5["species_name"];
			
			$query6 = "SELECT breedingPair, COUNT(*) AS cnt FROM litters WHERE breedingPair=" . $parentPair;
            $result6 = $pdo->query($query6);
            $result6->setFetchMode(PDO::FETCH_ASSOC);
            $row6 = $result6->fetch(PDO::FETCH_ASSOC);
			$numberOfPups = $row6["cnt"];
			
			$query7 = "SELECT breedingPair, COUNT(*) AS cnts FROM filtered_return WHERE deceased=1 AND breedingPair=" . $parentPair;
            $result7 = $pdo->query($query7);
            $result7->setFetchMode(PDO::FETCH_ASSOC);
            $row7 = $result7->fetch(PDO::FETCH_ASSOC);
			$numberOfDeceasedPups = $row7["cnts"];
			$deceasedPercentage = round(($numberOfDeceasedPups / $numberOfPups),2);
			$survivalPercentage = 100.00 - $deceasedPercentage;
            echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
            echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
            echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
            echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
			echo "<td class=\"animalList\" style=\"text-align: center;\">" . $numberOfPups . "</td>\n";
			echo "<td class=\"animalList\" style=\"text-align: center;\">" . $numberOfDeceasedPups . "</td>\n";
			echo "<td class=\"animalList\" style=\"text-align: center;\">" . $survivalPercentage . "</td>\n";
            echo "</tr>\n";
			
        }
    }
    echo "</tbody></table>\n";
    echo "</form>\n";
    echo "</div>";
    $pdo = null;
}

function displayAnimalTable()
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);
    $animalList = "";
    $litterFilter = "";
    $displayAll = TRUE;

    if (isset($_REQUEST["clear"])) {
        $_POST = array();
        $_REQUEST = array();
    }

    // echo "before\n";
    if (isset($_REQUEST["filter"])) { // retrieve the form data by using the element's name attributes value as key
        $displayAll = FALSE;
        // echo $displayAll;
        if (! empty($_REQUEST["pi_name"])) {
            $filterPI = $_REQUEST["pi_name"];
            $piFilter = "WHERE username='" . $filterPI . "'";
        }
    }

    if(isset($_REQUEST["animalID"])) { //added for update animal form
	$displayAll = FALSE;
	    
	$filterAnimalId = $_REQUEST["animalID"];
	if (empty($animalList)) {
	    $animalList = "WHERE animalID=" . $filterAnimalId;
	} else {
	    $animalList = $animalList . " AND animalID=" . $filterAnimalId;
	}
    }
	
    if (! empty($_REQUEST["pairID"])) {
        $displayAll = FALSE;

        $filterbreedingPair = $_REQUEST["pairID"];
        if (empty($animalList)) {
            $animalList = "WHERE breedingPair=" . $filterbreedingPair;
        } else {
            $animalList = $animalList . " AND breedingPair=" . $filterbreedingPair;
        }
    }

    if (! empty($_REQUEST["litterID"])) {
        $displayAll = FALSE;

        $filterLitterID = $_REQUEST["litterID"];
        if (empty($animalList)) {
            $animalList = "WHERE litterID=" . $filterLitterID;
        } else {
            $animalList = $animalList . " AND litterID=" . $filterLitterID;
        }
    }

    if (! empty($_REQUEST["species_name"])) {
        $displayAll = FALSE;

        $filterSpecies = $_REQUEST["species_name"];
        if (empty($animalList)) {
            $animalList = "WHERE species_name='" . $filterSpecies . "'";
        } else {
            $animalList = $animalList . " AND species_name='" . $filterSpecies . "'";
        }
    }

    if (! empty($_REQUEST["strain_name"])) {
        $displayAll = FALSE;

        $filterStrain = $_REQUEST["strain_name"];
        if (empty($animalList)) {
            $animalList = "WHERE strain_name='" . $filterStrain . "'";
        } else {
            $animalList = $animalList . " AND strain_name='" . $filterStrain . "'";
        }
    }

    if (! empty($_REQUEST["genotype_name"])) {
        $displayAll = FALSE;

        $filterGenotype = $_REQUEST["genotype_name"];
        if (empty($animalList)) {
            $animalList = "WHERE genotype='" . $filterGenotype . "'";
        } else {
            $animalList = $animalList . " AND genotype='" . $filterGenotype . "'";
        }
    }

    if (! empty($_REQUEST["tagNumber"])) {
        $displayAll = FALSE;

        $filterTagNumber = $_REQUEST["tagNumber"];
        if (empty($animalList)) {
            $animalList = "WHERE tagNumber=" . $filterTagNumber;
        } else {
            $animalList = $animalList . " AND tagNumber=" . $filterTagNumber;
        }
    }

    if (! empty($_REQUEST["birth_date"])) {
        $displayAll = FALSE;

        $filterBirthDate = $_REQUEST["birth_date"];
        echo "----->> dobvar: [" . $filterBirthDate . "]\n";
        if (empty($animalList)) {
            $animalList = "WHERE birth_date='" . $filterBirthDate . "'";
        } else {
            $animalList = $animalList . " AND birth_date='" . $filterBirthDate . "'";
        }
    }

    if (! empty($_REQUEST["breeder"])) {
        $filterBreeder = "breeder";
        if (empty($animalList)) {
            $animalList = "WHERE (classification='" . $filterBreeder . "'";
        } else {
            $animalList = $animalList . " AND (classification='" . $filterBreeder . "'";
        }

        if ((empty($_REQUEST["pup"])) && (empty($_REQUEST["weanling"]))) {
            $animalList = $animalList . ")";
        }
    }

    if (! empty($_REQUEST["pup"])) {
        $filterPup = "pup";
        if (empty($animalList)) {
            $animalList = "WHERE (classification='" . $filterPup . "'";
        } elseif (empty($_REQUEST["breeder"])) {
            $animalList = $animalList . " AND (classification='" . $filterPup . "'";
        } else {
            $animalList = $animalList . " OR classification='" . $filterPup . "'";
        }

        if (empty($_REQUEST["weanling"])) {
            $animalList = $animalList . ")";
        }
    }

    if (! empty($_REQUEST["weanling"])) {
        $filterWeanling = "weanling";
        if (empty($animalList)) {
            $animalList = "WHERE (classification='" . $filterWeanling . "')";
        } elseif ((empty($_REQUEST["breeder"])) && (empty($_REQUEST["pup"]))) {
            $animalList = $animalList . " AND (classification='" . $filterWeanling . "')";
        } else {
            $animalList = $animalList . " OR classification='" . $filterWeanling . "')";
        }
    }

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);

    echo "<!-- *** NOTE *** This HTML table and contents are auto-generated by code -->\n";

    echo "<div id=\"animalTable\" class=\"maintable\">\n";
    echo "<form method=\"POST\" >\n";
    echo "<table id=\"maintable\" class=\"display compact\">\n";
    echo "<thead>";
    echo "<tr class=\"animalList\">
    		<th class=\"animals\">Select</th> <th class=\"animals\">ID</th> <th class=\"animals\">Investigator</th> <th class=\"animals\">Tag<br>Number</th> 
    		<th class=\"animals\">Species</th> <th class=\"animals\">Class</th> <th class=\"animals\">Sex</th> <th class=\"animals\">Strain</th> <th class=\"animals\">Genotype</th> 
    		<th class=\"animals\">Litter<br>ID</th> <th class=\"animals\">Parent<br>Pair</th> <th class=\"animals\">Birth<br>Date</th> <th class=\"animals\">Wean<br>Date</th> 
    		<th class=\"animals\">Tag<br>Date</th> <th class=\"animals\">Deceased</th> <th class=\"animals\">Transferred</th> 
    	  </tr>\n";
    echo "</thead>
	<tbody>";

    if ($displayAll) {

        $query1 = "SELECT * FROM `filtered_return`";

        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);

        $tableRow = 0;

        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $tagNumber = $row["tagNumber"];
                $sex = $row["sex"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $classification = $row["classification"];
                $genotype = $row["genotype"];
                $birth_date = $row["birth_date"];
                $wean_date = $row["wean_date"];
                $tag_date = $row["tag_date"];
                $deceased = $row["deceased"];
                $transferred = $row["transferred"];
                $comments = $row["comments"];
                
                if ($deceased == 1) {
                    $strDeceased = "Yes";
                } else {
                    $strDeceased = "No";
                }

                if ($transferred == 1) {
                    $strTransferred = "Yes";
                } else {
                    $strTransferred = "No";
                }

                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);

                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];

                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);

                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }

                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);

                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];

                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\"><input type=\"radio\" name=\"rowselect\" value=\"" . htmlspecialchars($animalID) . "\"></td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tagNumber . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $classification . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $sex . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $genotype . "</td\n>";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $wean_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tag_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strDeceased . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strTransferred . "</td>\n";
                echo "</tr>\n";
            }
        }
    } else {

        $query1 = "SELECT * FROM `filtered_return` " . $animalList;

        //echo "\n<br><font style=\"color: red;\">SQL Query Debug --> <strong>" . $query1 . "</strong></font>\n<br><br>";
        // echo var_dump($_POST);
        // echo var_dump($_REQUEST);

        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);

        $tableRow = 0;

        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $tagNumber = $row["tagNumber"];
                $sex = $row["sex"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $classification = $row["classification"];
                $genotype = $row["genotype"];
                $birth_date = $row["birth_date"];
                $wean_date = $row["wean_date"];
                $tag_date = $row["tag_date"];
                $deceased = $row["deceased"];
                $transferred = $row["transferred"];
                $parentPair = $row["breedingPair"];
                $litterID = $row["litterID"];
                $comments = $row["comments"];

                if ($deceased == 1) {
                    $strDeceased = "Yes";
                } else {
                    $strDeceased = "No";
                }

                if ($transferred == 1) {
                    $strTransferred = "Yes";
                } else {
                    $strTransferred = "No";
                }

                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);

                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];
                // echo "--> " . $filterPI . ": " . $responsible_PI . "\n\n";
                if ((! empty($filterPI)) && ($responsible_PI != $filterPI)) {
                    continue;
                }

                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);

                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }

                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);

                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];

                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\"><input type=\"radio\" name=\"rowselect\" value=\"" . htmlspecialchars($animalID) . "\"></td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tagNumber . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $classification . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $sex . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $genotype . "</td\n>";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $wean_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tag_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strDeceased . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strTransferred . "</td>\n";
                echo "</tr>\n";
            }
        }
    }

    echo "</tbody></table>\n";
    echo "</form>\n";
    echo "</div>";
    $pdo = null;
}

function addUserButton(){
	echo "<div class='dropdown'>";
		echo "<button class='dropbtn'>User &#9660</button>";
		echo "<div class='dropdown-content'>";
			echo "<a href=\"mainpage.php\">Main Page</a>";
    			if ($_SESSION['role'] == "Admin"){
        			echo "<a href=\"register.php\">Create User</a>";
			}
			echo "<a href='logout.php'>Logout</a>";
		echo "</div>";
	echo "</div>";
	echo "</div>";	
}
?>

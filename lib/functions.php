<?php

// Function: getDropDown()
// Parameters required: $fieldName and $tableName
//
// This function is to be inserted between the <select> tags of an HTML dropdown dialog
// Call this function with the arguments $fieldName (name of DB field for which you want a value)
// and $tableName (name of DB table containing field)
//
// results of calling: getDropDown("generation_name", "generations") will be returned similar to:
// <option value="gen1">gen1</option>
// <option value="gen2">gen2</option>
// <option value="gen3">gen3</option>
// --where, for example "gen1" is the value contained in the "generation_name" field of the table "generations"
//
// Your HTML dropdown code will look similar to this:
// <select name="choose_generation">
// getDropDown("generation_name", "generations"); <--wrapped in php tags
// </select>
function getDropDown($fieldName, $tableName, $previousValue)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $returndata = array();
    $returnArray = null;
    $extra = "";

    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $query = "SELECT DISTINCT " . $fieldName . " FROM " . $tableName . " ORDER BY " . $fieldName . " ASC";
    //echo "\n--> " . $query . "\n";
    $result = $pdo->query($query);
    $result->setFetchMode(PDO::FETCH_ASSOC);

    $i = 0;
    $j = 0;
    $alreadyFound = array();

    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        if (! empty($row)) {

            $returnArray[$i] = $row;
            $i ++;
            $skipRest = "false";
        } else {
            echo "<option value=\"none\">No records avail</option>\n";
            $skipRest = "true";
        }
    }

    if ($skipRest != "true") {

        if (! empty($previousValue)) {
            echo "<option name=\"" . $fieldName . "\"value=\"\" >- select -</option>\n";
        } else {
            echo "<!-- *** dropdown box \"<option>\" values are auto-generated by code -->\n";
            echo "<option name=\"" . $fieldName . "\"value=\"\" selected>- select -</option>\n";
        }
        foreach ($returnArray as $row) {
            foreach ($row as $key => $val) {
                if ($val == $previousValue) {
                    $extra = "selected";
                }
                if (! in_array($val, $alreadyFound) && ($val != "")) { // don't add duplicate or blank values to the list
                    if ($key == $fieldName) {
                        echo "<option name=\"" . $fieldName . "\" value=\"" . htmlspecialchars($val) . "\" " . $extra . ">" . htmlspecialchars($val) . "</option>\n";
                    } else {
                        echo "<option value=\"none\">No records avail</option>\n";
                    }
                }
                $alreadyFound[$j] = $val;
                $j ++;
                $extra = "";
            }
        }
        // echo "<option value=\"0000\" selected>- select -</option>\n";
    }

    $pdo = null;
}

function getInvestigators($last_pi_name)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $returndata = array();
    $returnArray = null;

    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $query = "SELECT DISTINCT * FROM user WHERE user_role='Investigator' ORDER BY last_name ASC";
    $result = $pdo->query($query);
    // var_dump($query);
    $result->setFetchMode(PDO::FETCH_ASSOC);

    $i = 0;

    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        if (! empty($row)) {

            $returnArray[$i] = $row;
            $i ++;
            $skipRest = "false";
        } else {
            echo "<option value=\"pi_name\" selected>No Investigators</option>\n";
            $skipRest = "true";
        }
    }

    if ($skipRest != "true") {
        if (! empty($last_pi_name)) {
            echo "<option name=\"pi_name\" value=\"\">- select -</option>\n";
        } else {
            echo "<!-- *** dropdown box \"<option>\" values are auto-generated by code -->\n";
            echo "<option name=\"pi_name\" value=\"\" selected>- select -</option>\n";
        }

        foreach ($returnArray as $row) {
            // foreach ($row as $key=>$val) {
            $name = $row['last_name'] . ", " . $row['first_name'];
            $username = $row['username'];
            if ($username == $last_pi_name) {
                echo "<option name=\"pi_name\" value=\"" . htmlspecialchars($username) . "\" selected>" . htmlspecialchars($name) . "</option>\n";
            } else {
                echo "<option name=\"pi_name\" value=\"" . htmlspecialchars($username) . "\">" . htmlspecialchars($name) . "</option>\n";
            }
        }
    }

    $pdo = null;
}

//create new litter with null values
function createNewLitter($litterID)
{
  ini_set('display_errors', 1);
  ini_set('display_startup_errors', 1);
  error_reporting(E_ALL);

  try {
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    $sql = "INSERT INTO litters (litterID) VALUES ($litterID)";
    $pdo->exec($sql);

  } catch (PDOException $e) {
    echo $e->getMessage();
  }
  $pdo = null;
}
function newLitterIncrement(){
  ini_set('display_errors', 1);
  ini_set('display_startup_errors', 1);
  error_reporting(E_ALL);

  try {
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

    $sql = 'SELECT MAX(litterID) FROM litters';
    $q = $pdo->query($sql);
    $q->setFetchMode(PDO::FETCH_ASSOC);
    $temp = $q->fetch();
    $newLitterID = $temp['MAX(litterID)'] + 1;

  } catch (PDOException $e) {
    echo $e->getMessage();
  }
  $pdo = null;
  return $newLitterID;
}

//gets maleID, desiredStrain from pair number
function getMaleIDStrainFromPairNum($pairNumber){
  ini_set('display_errors', 1);
  ini_set('display_startup_errors', 1);
  error_reporting(E_ALL);
try {
  require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

  $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

  $sql = 'SELECT maleID, desiredStrain FROM breeding_pairs WHERE pairID = $pairNumber';
  $q = $pdo->query($sql);
  $q->setFetchMode(PDO::FETCH_ASSOC);
  $temp = $q->fetch();
} catch (PDOException $e) {
  echo $e->getMessage();
}
$pdo = null;
return $temp;
}

//gets species,generation, and PI for litter based upon id of parent
function getLitterValuesFromMaleID($id){
  ini_set('display_errors', 1);
  ini_set('display_startup_errors', 1);
  error_reporting(E_ALL);
try {
  require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

  $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

  $sql = 'SELECT species_name,generation,PI_username FROM animals_join_litters_join_pi WHERE animalID = $id';
  $q = $pdo->query($sql);
  $q->setFetchMode(PDO::FETCH_ASSOC);
  $temp = $q->fetch();
} catch (PDOException $e) {
  echo $e->getMessage();
}
$pdo = null;
return $temp;
}

function checkLitterExists($litterID)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
    $litterExists = TRUE;

    try {
        $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
        $query = "SELECT id FROM litters WHERE litterID = " . $litterID;
        $result = $pdo->query($query);
        $result->fetch(PDO::FETCH_ASSOC);

        if (! $result) {
            $litterExists = FALSE;
        }
        return $litterExists;
    } catch (PDOException $e) {
        $returnArray = array(
            "Error accessing database"
        );
    }

    $pdo = null;
}

function addPups($litterID, $numberPups, $species, $strain, $birthDate)
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $failCount = 0;

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $litterExists = checkLitterExists($litterID);

    if ($litterExists) {
        $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);

        $setup = $pdo->prepare("SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;");
        $setup->execute();

        $query = $pdo->prepare("INSERT INTO `animals` (`litterID`, `species`, `strain`, `birth_date`) VALUES (?, ?, ?, ?)");

        for ($i = 0; $i < $numberPups; $i ++) {
            if (! $query->execute([
                $litterID,
                $species,
                $strain,
                $birthDate
            ])) {
                $failCount ++;
            }
        }
        if ($failCount > 0) {
            echo "Error inserting records!";
        } else {
            echo "Success - " . htmlspecialchars($numberPups) . " new pups added to the database!";
        }
    } else {
        echo "Error - Duplicate Litter ID";
    }

    $pdo = null;
}

/*Adds a new animal to the database
$vals assoc names: species, classification, sex, tagDate, birthDate, weanDate, genotype, litter, location, strain_ID, tagNum, deceased, transfer, notes*/
function addNewAnimal($vals){
	ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);


    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	
	//check that tag number not duplicate
	$queryTag = $pdo->prepare("SELECT COUNT(*) AS count FROM animals WHERE tagNumber = ?");
	$result = $queryTag->execute([$vals['tagNum']]);
	$tag = $queryTag->fetch();
	if($tag['count'] > 0){
		echo '<label style="color:red">Unable to add animal. Duplicate tag number: ' . $vals['tagNum'] . '</label>';
	}
	else{
	
	//add to database		
		$query = $pdo->prepare("CALL addNewAnimal(:species, :class, :sex, :tagDate, :dob, :wean, :geno, :litter, :loc, :strain, :tagNum, :dec, :tran, :notes)");
		$return = $query->execute([$vals['species'], $vals['classification'], $vals['sex'], $vals['tagDate'], $vals['birthDate'], $vals['weanDate'], $vals['genotype'],
			$vals['litter'], $vals['location'], $vals['strain_ID'], $vals['tagNum'], $vals['deceased'], $vals['transfer'], $vals['notes']]);

		if($return){
			echo '<label style="color:green">Animal added successfully.</label>';
		}
		else{
			echo '<label style="color:red">Addition Failed!!!</label>';
		}
	}
	$pdo = null;
}

/*
 Updates animal with posted values (or current if none posted) except when 1) Entered Tag# exists or 2) change of sex, species, or class would
 invalidate an existing breeding pair. 
 If litter ID is changed, will also update animal's generation.
 If PI or Strain changed, will also update PI_assigned_animals table 
*/
function updateAnimal(){
		
				
	ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

	$issues = false; //sets to true if any issues found with the update

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	
	//get animal's current field values
	$queryCur = $pdo->prepare("SELECT * FROM filtered_return WHERE tagNumber = ? LIMIT 1");
	$queryCur->execute([$_POST['change_tag']]);
	$cur = $queryCur->fetch();
	//var_dump($cur);
	$animalID = $cur['animalID'];
	
	//if POST['xx'] value empty, set value to current value, else use POST. Notes are appended	
	$class = (!isset($_POST['classification']) ? $cur['classification'] : $_POST['classification']);
	$pi = (empty($_POST['pi']) ? $cur['PI_username'] : $_POST['pi']);
	$species = (empty($_POST['species_name']) ? $cur['species_name'] : $_POST['species_name']);
	$sex = (empty($_POST['sex']) ? $cur['sex'] : $_POST['sex']);
	$tagDate = (empty($_POST['tagDate']) ? $cur['tag_date'] : $_POST['tagDate']);
	$dob = (empty($_POST['dob']) ? $cur['birth_date'] : $_POST['dob']);
	$weanDate = (empty($_POST['weanDate']) ? $cur['wean_date'] : $_POST['weanDate']);
	$genotype = (empty($_POST['genotype']) ? $cur['genotype'] : $_POST['genotype']);
	$litter = (empty($_POST['litter']) ? $cur['litterID'] : $_POST['litter']);
	$location = (empty($_POST['location']) ? $cur['location'] : $_POST['location']);
	$strainID = (empty($_POST['strain_name']) ? $cur['id_strain'] : getStrainIdByName($_POST['strain_name']));
	$tagNum = (empty($_POST['tagNum']) ? $cur['tagNumber'] : $_POST['tagNum']);
	//if deceased/transfer not set, then leave as current, else if set then value is true. Convert current from int to boolean first
	$cur_dec = ($cur['deceased'] ? true : false);
	$deceased = ((!isset($_POST['deceased'])) ? $cur_dec : true);
	$cur_tran = ($cur['transferred'] ? true : false);
	$transfer = ((!isset($_POST['transfer'])) ? $cur_tran : true);
	//if new notes, append to current notes
	$notes = (empty($_POST['notes']) ? $cur['comments'] : ($cur['notes'] . "\n" . $_POST['notes']));	
	
	
	//if tag# changed check that tag number not duplicate
	if($tagNum != $cur['tagNumber']){
		$issues = true;
		$queryTag = $pdo->prepare("SELECT COUNT(*) AS count FROM animals WHERE tagNumber = ?");
		$queryTag->execute([$tagNum]);
		$tag = $queryTag->fetch();
		if($tag['count'] > 0){
			echo '<label style="color:red">Unable to add animal. Duplicate tag number: ' . $tagNum . '</label>';
		}
	}			
				
			
	//if changes to sex, species, or classification check that animal isn't part of existing breeding pair
	if($sex != $cur['sex'] || $species != $cur['species_name'] || ($class != $cur['classification'] && $class != 'breeder')){
		$queryBr = $pdo->prepare("SELECT COUNT(*) AS count FROM breeding_pairs WHERE maleID = ? OR femaleID = ?");
		$queryBr->execute([$animalID, $animalID]);
		$br = $queryBr->fetch();
		if($br['count'] > 0){
			$issues = true;
			echo '<label style="color:red">Unable to update. Animal is part of breeding pair which the updates would invalidate.</label>';
		}
		echo '<label style="color:red">Check breeder</label>';
	}
	
	
	//if no issues, update animal
	if(!$issues){
		//if litterID changed, get generation for update
		$gen = $cur['generation'];
		if($litter != $cur['litterID']){
			$queryGen = $pdo->prepare("SELECT offspringGen FROM litters, breeding_pairs WHERE litterID = ? AND breedingPair = pairID LIMIT 1");
			$queryGen->execute([$litter]);
			$result = $queryGen->fetch();
			$gen = $result['offspringGen'];
		}
		
		
		$queryUpdateA = $pdo->prepare("UPDATE animals SET species_name = ?, classification = ?, sex = ?, entered_date = DEFAULT, tag_date = ?, birth_date = ?, wean_date = ?, genotype = ?, generation = ?, location = ?, strain_ID = ?, tagNumber = ?, deceased = ?, transferred = ?, comments = ? WHERE animalID = ?");
		$return = $queryUpdateA->execute([$species, $class, $sex, $tagDate, $dob, $weanDate, $genotype, $gen, $location, $strainID, $tagNum, $deceased, $transfer, $notes, $animalID]);
		if($return){
			echo '<label style="color:green">Update animals Successful!</label>';
		}
		else{
			echo "Update Failed!!!";
		}		
		
		//if PI and/or strain changed, update PI_assigned_animals table
		if($pi != $cur['PI_username'] || $strainID != $cur['id_strain']){
			$queryUpdateB = $pdo->prepare("UPDATE PI_assigned_animals SET PI_username=?, PI_strain_ID=? WHERE PI_animalID = ?");
			$return = $queryUpdateB->execute([$pi, $strainID, $animalID]);
			if($return){
				echo '<label style="color:green">Update pi_assigned_animals Successful!</label>';
			}
			else{
				echo "Update Failed!!!";
			}
		}
	} 
	else {
		echo '<label style="color:blue">Update Fail!</label>';
	}
}

function getStrainIdByName($sName){
	$options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	$query = $pdo->prepare("SELECT id_strain FROM strains WHERE strain_name = ? LIMIT 1");
	$query->execute([$sName]);
	$result = $query->fetch();
	return $result['id_strain'];
}

function addBreedPair($strain, $date, $male, $female, $notes){
	ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
	
	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
	//prepare and call stored procedure
	$query = $pdo->prepare("CALL addBreedPair(?, ?, ?, ?, ?, @p_id)");
	//Bind all in parameters. OUT parameter does not need binding
	$query->bindParam(1, $male, PDO::PARAM_INT, 11);
	$query->bindParam(2, $female, PDO::PARAM_INT, 11);
	$query->bindParam(3, $strain, PDO::PARAM_STR, 45);
	$query->bindParam(4, $date, PDO::PARAM_STR, 11);
	$query->bindParam(5, $notes, PDO::PARAM_STR, 512);
	$return = $query->execute();
	
	if($return){
		//gets stored procedure's output
		$sprocOutput = $pdo->query("SELECT @p_id")->fetch();
		echo '<label style="color:green">Successfully added new breeding pair. New pair #: ' . htmlspecialchars($sprocOutput['@p_id']) . '</label>';
	}
	else{
		echo '<label style="color:red">Addition Failed!!!</label>';
	}
	
	$pdo = null;
}

function getAnimals()
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    if (isset($_REQUEST["Filter"])) { // retrieve the form data by using the element's name attributes value as key
        $displayAll = FALSE;
        $filterPI = $_REQUEST["pi_name"];
        $filterBreeder = $_REQUEST["breedingPair"];
        $filterSpecies = $_REQUEST["species_name"];
        $filterPair = $_REQUEST["strain_name"];
        $filterTagNumber = $_REQUEST["tagNumber"];
        $filterLitter = $_REQUEST["litterID"];
        $filterDOB = $_REQUEST["birth_date"];
        $filterBreeder = $_REQUEST["breeder"];
        $filterPup = $_REQUEST["pup"];
        $filterWeanling = $_REQUEST["weanling"];
    }
}

function displayWeanlingReportTable() {
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);
    $animalList = "";
    $litterFilter = "";
    $displayAll = TRUE;
	
    if (isset($_REQUEST["clear"])) {
        $_POST = array();
        $_REQUEST = array();
    }
	
    // echo "before\n";
    if (isset($_REQUEST["startDate"]) && isset($_REQUEST["endDate"])) {// retrieve the form data by using the element's name attributes value as key
		$displayAll = FALSE;
		
		$filterStartDate = $_REQUEST["startDate"];
		$filterEndDate = $_REQUEST["endDate"];
		echo "---->> startDOBvar: [" . $filterStartDate . "]\n";
		echo "---->> endDOBvar: [" . $filterEndDate . "]\n";
		
		$animalList = "AND birth_date BETWEEN '" . $filterStartDate . "' AND '" . $filterEndDate . "'";
	}
	
    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
    echo "<!-- *** NOTE *** This HTML table and contents are auto-generated by code -->\n";
    echo "<div id=\"animalTable\" class=\"maintable\">\n";
    echo "<form>\n";
    echo "<table id=\"maintable\" class=\"display compact\">\n";
    echo "<thead>";
    echo "<tr class=\"animalList\">
    		<th class=\"animals\">ID</th> <th class=\"animals\">Investigator</th> <th class=\"animals\">Species</th> <th class=\"animals\">Strain</th> 
			<th class=\"animals\">Litter<br>ID</th> <th class=\"animals\">Parent<br>Pair</th> <th class=\"animals\">Birth<br>Date</th>  
    	  </tr>\n";
    echo "</thead>
	<tbody>";
    if ($displayAll) {
        $query1 = "SELECT * FROM `filtered_return` WHERE classification='pup'";
        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);
        $tableRow = 0;
        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $birth_date = $row["birth_date"];
                $deceased = $row["deceased"];
                $transferred = $row["transferred"];
                $comments = $row["comments"];
                
                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);
                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];
                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);
                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }
                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);
                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];
                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "</tr>\n";
            }
        }
    } else {
        $query1 = "SELECT * FROM `filtered_return` WHERE classification='pup' " . $animalList;
        echo "\n<br><font style=\"color: red;\">SQL Query Debug --> <strong>" . $query1 . "</strong></font>\n<br><br>";
        // echo var_dump($_POST);
        // echo var_dump($_REQUEST);
        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);
        $tableRow = 0;
        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $birth_date = $row["birth_date"];
                $parentPair = $row["breedingPair"];
                $litterID = $row["litterID"];
                $comments = $row["comments"];
				
                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);
                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];
                // echo "--> " . $filterPI . ": " . $responsible_PI . "\n\n";
                if ((! empty($filterPI)) && ($responsible_PI != $filterPI)) {
                    continue;
                }
                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);
                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }
                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);
                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];
                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "</tr>\n";
            }
        }
    }
    echo "</tbody></table>\n";
    echo "</form>\n";
    echo "</div>";
    $pdo = null;
}

function pupSurvivabilityReportTable() {
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);
    $animalList = "";
	
    if (isset($_REQUEST["clear"])) {
        $_POST = array();
        $_REQUEST = array();
    }
	
	
    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";
    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);
    echo "<!-- *** NOTE *** This HTML table and contents are auto-generated by code -->\n";
    echo "<div id=\"animalTable\" class=\"maintable\">\n";
    echo "<form>\n";
    echo "<table id=\"maintable\" class=\"display compact\">\n";
    echo "<thead>";
    echo "<tr class=\"animalList\">
    		<th class=\"animals\">Investigator</th> <th class=\"animals\">Species</th> <th class=\"animals\">Strain</th> <th class=\"animals\">Parent<br>Pair</th> 
			<th class=\"animals\">Number<br>Of<br>Pups</th> <th class=\"animals\">Deceased<br>Pups</th> <th class=\"animals\">Percent<br>That<br>Survive</th>
    	  </tr>\n";
    echo "</thead>
	<tbody>";
        $query1 = "SELECT * FROM litters GROUP BY breedingPair";
        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);
        $tableRow = 0;
    while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
        if (! empty($row)) {
			$parentPair = $row["breedingPair"];
			$animalID_pup = $row["animalID_pup"];
			$litterID = $row["litterID"];
            //$animalID = $row["animalID"];
            //$strain = $row["strain_name"];
            //$species = $row["species_name"];
            //deceased = $row["deceased"];
            //$comments = $row["comments"];
              
            $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID_pup;
            $result2 = $pdo->query($query2);
            $result2->setFetchMode(PDO::FETCH_ASSOC);
            $row2 = $result2->fetch(PDO::FETCH_ASSOC);
            $responsible_PI = $row2["PI_username"];
            $strain_ID = $row2["PI_strain_ID"];
            if (! empty($responsible_PI)) {
                $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                $result3 = $pdo->query($query3);
                $result3->setFetchMode(PDO::FETCH_ASSOC);
                $row3 = $result3->fetch(PDO::FETCH_ASSOC);
                $firstName = $row3["first_name"];
                $lastName = $row3["last_name"] . ", ";
            } else {
                $lastName = "Unassigned";
                $firstName = "";
            }
			
            $query5 = "SELECT species_name, strain_name FROM filtered_return WHERE animalID=" . $animalID_pup;
            $result5 = $pdo->query($query5);
            $result5->setFetchMode(PDO::FETCH_ASSOC);
            $row5 = $result5->fetch(PDO::FETCH_ASSOC);
            $strain = $row5["strain_name"];
			$species = $row5["species_name"];
			
			$query6 = "SELECT breedingPair, COUNT(*) AS cnt FROM litters WHERE breedingPair=" . $parentPair;
            $result6 = $pdo->query($query6);
            $result6->setFetchMode(PDO::FETCH_ASSOC);
            $row6 = $result6->fetch(PDO::FETCH_ASSOC);
			$numberOfPups = $row6["cnt"];
			
			$query7 = "SELECT breedingPair, COUNT(*) AS cnts FROM filtered_return WHERE deceased=1 AND breedingPair=" . $parentPair;
            $result7 = $pdo->query($query7);
            $result7->setFetchMode(PDO::FETCH_ASSOC);
            $row7 = $result7->fetch(PDO::FETCH_ASSOC);
			$numberOfDeceasedPups = $row7["cnts"];
			$survivalPercentage = round(($numberOfDeceasedPups / $numberOfPups),2);
            echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
            echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
            echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
            echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
			echo "<td class=\"animalList\" style=\"text-align: center;\">" . $numberOfPups . "</td>\n";
			echo "<td class=\"animalList\" style=\"text-align: center;\">" . $numberOfDeceasedPups . "</td>\n";
			echo "<td class=\"animalList\" style=\"text-align: center;\">" . $survivalPercentage . "</td>\n";
            echo "</tr>\n";
        }
    }
    echo "</tbody></table>\n";
    echo "</form>\n";
    echo "</div>";
    $pdo = null;
}

function displayAnimalTable()
{
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);
    $animalList = "";
    $litterFilter = "";
    $displayAll = TRUE;

    if (isset($_REQUEST["clear"])) {
        $_POST = array();
        $_REQUEST = array();
    }

    // echo "before\n";
    if (isset($_REQUEST["filter"])) { // retrieve the form data by using the element's name attributes value as key
        $displayAll = FALSE;
        // echo $displayAll;
        if (! empty($_REQUEST["pi_name"])) {
            $filterPI = $_REQUEST["pi_name"];
            $piFilter = "WHERE username='" . $filterPI . "'";
        }
    }

    if (! empty($_REQUEST["pairID"])) {
        $displayAll = FALSE;

        $filterbreedingPair = $_REQUEST["pairID"];
        if (empty($animalList)) {
            $animalList = "WHERE breedingPair=" . $filterbreedingPair;
        } else {
            $animalList = $animalList . " AND breedingPair=" . $filterbreedingPair;
        }
    }

    if (! empty($_REQUEST["litterID"])) {
        $displayAll = FALSE;

        $filterLitterID = $_REQUEST["litterID"];
        if (empty($animalList)) {
            $animalList = "WHERE litterID=" . $filterLitterID;
        } else {
            $animalList = $animalList . " AND litterID=" . $filterLitterID;
        }
    }

    if (! empty($_REQUEST["species_name"])) {
        $displayAll = FALSE;

        $filterSpecies = $_REQUEST["species_name"];
        if (empty($animalList)) {
            $animalList = "WHERE species_name='" . $filterSpecies . "'";
        } else {
            $animalList = $animalList . " AND species_name='" . $filterSpecies . "'";
        }
    }

    if (! empty($_REQUEST["strain_name"])) {
        $displayAll = FALSE;

        $filterStrain = $_REQUEST["strain_name"];
        if (empty($animalList)) {
            $animalList = "WHERE strain_name='" . $filterStrain . "'";
        } else {
            $animalList = $animalList . " AND strain_name='" . $filterStrain . "'";
        }
    }

    if (! empty($_REQUEST["genotype_name"])) {
        $displayAll = FALSE;

        $filterGenotype = $_REQUEST["genotype_name"];
        if (empty($animalList)) {
            $animalList = "WHERE genotype='" . $filterGenotype . "'";
        } else {
            $animalList = $animalList . " AND genotype='" . $filterGenotype . "'";
        }
    }

    if (! empty($_REQUEST["tagNumber"])) {
        $displayAll = FALSE;

        $filterTagNumber = $_REQUEST["tagNumber"];
        if (empty($animalList)) {
            $animalList = "WHERE tagNumber=" . $filterTagNumber;
        } else {
            $animalList = $animalList . " AND tagNumber=" . $filterTagNumber;
        }
    }

    if (! empty($_REQUEST["birth_date"])) {
        $displayAll = FALSE;

        $filterBirthDate = $_REQUEST["birth_date"];
        echo "----->> dobvar: [" . $filterBirthDate . "]\n";
        if (empty($animalList)) {
            $animalList = "WHERE birth_date='" . $filterBirthDate . "'";
        } else {
            $animalList = $animalList . " AND birth_date='" . $filterBirthDate . "'";
        }
    }

    if (! empty($_REQUEST["breeder"])) {
        $filterBreeder = "breeder";
        if (empty($animalList)) {
            $animalList = "WHERE (classification='" . $filterBreeder . "'";
        } else {
            $animalList = $animalList . " AND (classification='" . $filterBreeder . "'";
        }

        if ((empty($_REQUEST["pup"])) && (empty($_REQUEST["weanling"]))) {
            $animalList = $animalList . ")";
        }
    }

    if (! empty($_REQUEST["pup"])) {
        $filterPup = "pup";
        if (empty($animalList)) {
            $animalList = "WHERE (classification='" . $filterPup . "'";
        } elseif (empty($_REQUEST["breeder"])) {
            $animalList = $animalList . " AND (classification='" . $filterPup . "'";
        } else {
            $animalList = $animalList . " OR classification='" . $filterPup . "'";
        }

        if (empty($_REQUEST["weanling"])) {
            $animalList = $animalList . ")";
        }
    }

    if (! empty($_REQUEST["weanling"])) {
        $filterWeanling = "weanling";
        if (empty($animalList)) {
            $animalList = "WHERE (classification='" . $filterWeanling . "')";
        } elseif ((empty($_REQUEST["breeder"])) && (empty($_REQUEST["pup"]))) {
            $animalList = $animalList . " AND (classification='" . $filterWeanling . "')";
        } else {
            $animalList = $animalList . " OR classification='" . $filterWeanling . "')";
        }
    }

    $options = [
        PDO::ATTR_EMULATE_PREPARES => false, // turn off emulation mode for "real" prepared statements
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, // turn on errors in the form of exceptions
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC // make the default fetch be an associative array
    ];
    require $_SERVER['DOCUMENT_ROOT'] . "/lib/dbconfig.php";

    $pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password, $options);

    echo "<!-- *** NOTE *** This HTML table and contents are auto-generated by code -->\n";

    echo "<div id=\"animalTable\" class=\"maintable\">\n";
    echo "<form>\n";
    echo "<table id=\"maintable\" class=\"display compact\">\n";
    echo "<thead>";
    echo "<tr class=\"animalList\">
    		<th class=\"animals\">Select</th> <th class=\"animals\">ID</th> <th class=\"animals\">Investigator</th> <th class=\"animals\">Tag<br>Number</th> 
    		<th class=\"animals\">Species</th> <th class=\"animals\">Class</th> <th class=\"animals\">Sex</th> <th class=\"animals\">Strain</th> <th class=\"animals\">Genotype</th> 
    		<th class=\"animals\">Litter<br>ID</th> <th class=\"animals\">Parent<br>Pair</th> <th class=\"animals\">Birth<br>Date</th> <th class=\"animals\">Wean<br>Date</th> 
    		<th class=\"animals\">Tag<br>Date</th> <th class=\"animals\">Deceased</th> <th class=\"animals\">Transferred</th> 
    	  </tr>\n";
    echo "</thead>
	<tbody>";

    if ($displayAll) {

        $query1 = "SELECT * FROM `filtered_return`";

        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);

        $tableRow = 0;

        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $tagNumber = $row["tagNumber"];
                $sex = $row["sex"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $classification = $row["classification"];
                $genotype = $row["genotype"];
                $birth_date = $row["birth_date"];
                $wean_date = $row["wean_date"];
                $tag_date = $row["tag_date"];
                $deceased = $row["deceased"];
                $transferred = $row["transferred"];
                $comments = $row["comments"];
                
                if ($deceased == 1) {
                    $strDeceased = "Yes";
                } else {
                    $strDeceased = "No";
                }

                if ($transferred == 1) {
                    $strTransferred = "Yes";
                } else {
                    $strTransferred = "No";
                }

                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);

                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];

                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);

                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }

                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);

                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];

                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\"><input type=\"radio\" name=\"rowselect\" value=\"" . htmlspecialchars($animalID) . "\"></td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tagNumber . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $classification . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $sex . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $genotype . "</td\n>";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $wean_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tag_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strDeceased . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strTransferred . "</td>\n";
                echo "</tr>\n";
            }
        }
    } else {

        $query1 = "SELECT * FROM `filtered_return` " . $animalList;

        echo "\n<br><font style=\"color: red;\">SQL Query Debug --> <strong>" . $query1 . "</strong></font>\n<br><br>";
        // echo var_dump($_POST);
        // echo var_dump($_REQUEST);

        $result = $pdo->query($query1);
        $result->setFetchMode(PDO::FETCH_ASSOC);

        $tableRow = 0;

        while ($row = $result->fetch(PDO::FETCH_ASSOC)) {
            if (! empty($row)) {
                $animalID = $row["animalID"];
                $tagNumber = $row["tagNumber"];
                $sex = $row["sex"];
                $strain = $row["strain_name"];
                $species = $row["species_name"];
                $classification = $row["classification"];
                $genotype = $row["genotype"];
                $birth_date = $row["birth_date"];
                $wean_date = $row["wean_date"];
                $tag_date = $row["tag_date"];
                $deceased = $row["deceased"];
                $transferred = $row["transferred"];
                $parentPair = $row["breedingPair"];
                $litterID = $row["litterID"];
                $comments = $row["comments"];

                if ($deceased == 1) {
                    $strDeceased = "Yes";
                } else {
                    $strDeceased = "No";
                }

                if ($transferred == 1) {
                    $strTransferred = "Yes";
                } else {
                    $strTransferred = "No";
                }

                $query2 = "SELECT PI_username, PI_strain_ID FROM PI_assigned_animals WHERE PI_animalID=" . $animalID;
                $result2 = $pdo->query($query2);
                $result2->setFetchMode(PDO::FETCH_ASSOC);
                $row2 = $result2->fetch(PDO::FETCH_ASSOC);

                $responsible_PI = $row2["PI_username"];
                $strain_ID = $row2["PI_strain_ID"];
                // echo "--> " . $filterPI . ": " . $responsible_PI . "\n\n";
                if ((! empty($filterPI)) && ($responsible_PI != $filterPI)) {
                    continue;
                }

                if (! empty($responsible_PI)) {
                    $query3 = "SELECT first_name, last_name FROM user WHERE username='" . $responsible_PI . "'";
                    $result3 = $pdo->query($query3);
                    $result3->setFetchMode(PDO::FETCH_ASSOC);
                    $row3 = $result3->fetch(PDO::FETCH_ASSOC);

                    $firstName = $row3["first_name"];
                    $lastName = $row3["last_name"] . ", ";
                } else {
                    $lastName = "Unassigned";
                    $firstName = "";
                }

                $query5 = "SELECT litterID, breedingPair FROM litters WHERE animalID_pup=" . $animalID;
                $result5 = $pdo->query($query5);
                $result5->setFetchMode(PDO::FETCH_ASSOC);
                $row5 = $result5->fetch(PDO::FETCH_ASSOC);

                $litterID = $row5["litterID"];
                $parentPair = $row5["breedingPair"];

                echo "<tr class=\"animalList\" title=\"Animal Notes: " . $comments . "\">\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\"><input type=\"radio\" name=\"rowselect\" value=\"" . htmlspecialchars($animalID) . "\"></td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $animalID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: left;\">" . $lastName . $firstName . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tagNumber . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $species . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $classification . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $sex . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strain . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $genotype . "</td\n>";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $litterID . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $parentPair . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $birth_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $wean_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $tag_date . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strDeceased . "</td>\n";
                echo "<td class=\"animalList\" style=\"text-align: center;\">" . $strTransferred . "</td>\n";
                echo "</tr>\n";
            }
        }
    }

    echo "</tbody></table>\n";
    echo "</form>\n";
    echo "</div>";
    $pdo = null;
}
?>
